openapi: 3.1.0
info:
  title: Lending - Loans
  version: '2'
servers:
  - url: https://mo-services-zero-production.moprestamo.com/api/v2
components:
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: X-API-KEY
    sec1:
      type: apiKey
      in: header
      name: X-AGGREGATOR-ID
security:
  - sec0: []
    sec1: []
paths:
  /loans:
    get:
      summary: List Loans
      description: ''
      operationId: list-credits
      parameters:
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Use this query parameter to specify the order in which the results
            of a query should be returned. It is commonly used for sorting the
            data in ascending or descending order based on one or more fields.
            You can specify one or more fields by which the data should be
            ordered, along with the order direction (ascending or descending)
            using a comma-separated list. For example,
            `ordering=name,created_at` would  order the results first by the
            `name` field in ascending order and then by the `created_at` field
            in ascending order.
          schema:
            type: string
        - name: limit
          in: query
          description: >-
            Use this query parameter to specify the maximum number of results to
            be returned in a single response. It is used for pagination and can
            help manage the size of the response data. The server will limit the
            number of results to the value specified in the `limit` parameter.
            If there are more results available, you may need to make multiple
            requests to retrieve the complete dataset. It's particularly useful
            when dealing with large result sets.
          schema:
            type: string
        - name: offset
          in: query
          description: >-
            Use this query parameter in conjunction with the `limit` parameter
            for pagination. It specifies the starting point or offset within the
            dataset from which results should be returned. By setting the
            offset, you can navigate to different segments of the result set.
            For example, if you set `offset=20` and `limit=10`, you will receive
            results 21 to 30. It is often used to retrieve subsequent pages of
            results.
          schema:
            type: string
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": [\n    {\n      \"id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n      \"reference\": \"string\",\n      \"external_id\": \"string\",\n      \"customer_id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n      \"customer_external_id\": \"string\",\n      \"customer_reference\": \"string\",\n      \"offer_id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n      \"amount\": 100.00,\n      \"installment_quantity\": 12,\n      \"created_at\": \"2019-08-24T14:15:22Z\",\n      \"updated_at\": \"2019-08-24T14:15:22Z\"\n\t\t},\n    {\n      \"id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n      \"reference\": \"string\",\n      \"external_id\": \"string\",\n      \"customer_id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n      \"customer_external_id\": \"string\",\n      \"customer_reference\": \"string\",\n      \"offer_id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n      \"amount\": 100.00,\n      \"installment_quantity\": 12,\n      \"created_at\": \"2019-08-24T14:15:22Z\",\n      \"updated_at\": \"2019-08-24T14:15:22Z\"\n    }\n  ],\n  \"metadata\": {\n    \"timestamp\": \"2023-08-30T16:30:00Z\",\n    \"version\": \"2\",\n    \"page_size\": 5,\n    \"filtered\": 2,\n    \"total_pages\": 1,\n    \"count\": 2\n  },\n  \"errors\": []\n}"
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        reference:
                          type: string
                          example: string
                        external_id:
                          type: string
                          example: string
                        customer_id:
                          type: string
                          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        customer_external_id:
                          type: string
                          example: string
                        customer_reference:
                          type: string
                          example: string
                        offer_id:
                          type: string
                          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        amount:
                          type: integer
                          example: 100
                          default: 0
                        installment_quantity:
                          type: integer
                          example: 12
                          default: 0
                        created_at:
                          type: string
                          example: '2019-08-24T14:15:22Z'
                        updated_at:
                          type: string
                          example: '2019-08-24T14:15:22Z'
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-08-30T16:30:00Z'
                      version:
                        type: string
                        example: '2'
                      page_size:
                        type: integer
                        example: 5
                        default: 0
                      filtered:
                        type: integer
                        example: 2
                        default: 0
                      total_pages:
                        type: integer
                        example: 1
                        default: 0
                      count:
                        type: integer
                        example: 2
                        default: 0
                  errors:
                    type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
    post:
      summary: Create Loan
      description: >-
        Use the Create Loan endpoint to create a new loan. A Loan represents the
        final approval and disbursement of a loan, typically based on a
        previously submitted Pre Loan request. It can include details such as
        the pre-loan identifier, aggregator identifier, external identifier,
        disbursement date, and additional data.
      operationId: create-loan
      parameters:
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - pre_loan_id
                - aggregator_id
              properties:
                pre_loan_id:
                  type: string
                  description: >-
                    The `pre_loan_id` field represents the unique identifier of
                    the pre-loan or loan request associated with the loan. It is
                    required to provide a valid UUID to link the loan to an
                    existing pre-loan request.
                aggregator_id:
                  type: string
                external_id:
                  type: string
                  description: >-
                    The `external_id` field allows you to provide an external
                    identifier or code that may be related to the loan. It's not
                    mandatory but can be useful for linking the loan to external
                    systems.
                disbursed_at:
                  type: string
                  description: >-
                    The `disbursed_at` field represents the date and time when
                    the loan is disbursed or finalized. It's not required, but
                    it can be used to record the disbursement date.
                  format: date
                others:
                  type: string
                  description: >-
                    The `others` field allows the inclusion of additional data
                    or custom fields in JSON format. It can be used to store
                    extra information related to the loan.
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": {\n\t\t\"id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n\t},\n  \"metadata\": {\n    \"timestamp\": \"2023-08-30T16:30:00Z\",\n    \"version\": \"2\"\n  },\n  \"errors\": []\n}"
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-08-30T16:30:00Z'
                      version:
                        type: string
                        example: '2'
                  errors:
                    type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
  /loans/{loan_id}:
    get:
      summary: Detail Loan
      description: ''
      operationId: detail-credit
      parameters:
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: loan_id
          in: path
          schema:
            type: string
          required: true
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": {\n\t\t\"id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n\t\t\"reference\": \"string\",\n\t\t\"external_id\": \"string\",\n    \"customer_id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n    \"customer_external_id\": \"string\",\n    \"customer_reference\": \"string\",\n\t\t\"offer_id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n\t\t\"amount\": 100.00,\n    \"installment_quantity\": 12,\n\t\t\"created_at\": \"2019-08-24T14:15:22Z\",\n\t\t\"updated_at\": \"2019-08-24T14:15:22Z\"\n\t},\n  \"metadata\": {\n    \"version\": 0,\n    \"timestamp\": \"2023-10-13T16:10:30.617Z\"\n  },\n  \"errors\": []\n}"
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      reference:
                        type: string
                        example: string
                      external_id:
                        type: string
                        example: string
                      customer_id:
                        type: string
                        example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      customer_external_id:
                        type: string
                        example: string
                      customer_reference:
                        type: string
                        example: string
                      offer_id:
                        type: string
                        example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      amount:
                        type: integer
                        example: 100
                        default: 0
                      installment_quantity:
                        type: integer
                        example: 12
                        default: 0
                      created_at:
                        type: string
                        example: '2019-08-24T14:15:22Z'
                      updated_at:
                        type: string
                        example: '2019-08-24T14:15:22Z'
                  metadata:
                    type: object
                    properties:
                      version:
                        type: integer
                        example: 0
                        default: 0
                      timestamp:
                        type: string
                        example: '2023-10-13T16:10:30.617Z'
                  errors:
                    type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
  /loan-payments:
    get:
      summary: List Loan Payments
      description: ''
      operationId: list-loan-payments
      parameters:
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Use this query parameter to specify the order in which the results
            of a query should be returned. It is commonly used for sorting the
            data in ascending or descending order based on one or more fields.
            You can specify one or more fields by which the data should be
            ordered, along with the order direction (ascending or descending)
            using a comma-separated list. For example,
            `ordering=name,created_at` would  order the results first by the
            `name` field in ascending order and then by the `created_at` field
            in ascending order.
          schema:
            type: string
        - name: limit
          in: query
          description: >-
            Use this query parameter to specify the maximum number of results to
            be returned in a single response. It is used for pagination and can
            help manage the size of the response data. The server will limit the
            number of results to the value specified in the `limit` parameter.
            If there are more results available, you may need to make multiple
            requests to retrieve the complete dataset. It's particularly useful
            when dealing with large result sets.
          schema:
            type: string
        - name: offset
          in: query
          description: >-
            Use this query parameter in conjunction with the `limit` parameter
            for pagination. It specifies the starting point or offset within the
            dataset from which results should be returned. By setting the
            offset, you can navigate to different segments of the result set.
            For example, if you set `offset=20` and `limit=10`, you will receive
            results 21 to 30. It is often used to retrieve subsequent pages of
            results.
          schema:
            type: string
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
  /installment-loans:
    get:
      summary: List Installment Payments
      description: ''
      operationId: list-installment-payments
      parameters:
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Use this query parameter to specify the order in which the results
            of a query should be returned. It is commonly used for sorting the
            data in ascending or descending order based on one or more fields.
            You can specify one or more fields by which the data should be
            ordered, along with the order direction (ascending or descending)
            using a comma-separated list. For example,
            `ordering=name,created_at` would  order the results first by the
            `name` field in ascending order and then by the `created_at` field
            in ascending order.
          schema:
            type: string
        - name: limit
          in: query
          description: >-
            Use this query parameter to specify the maximum number of results to
            be returned in a single response. It is used for pagination and can
            help manage the size of the response data. The server will limit the
            number of results to the value specified in the `limit` parameter.
            If there are more results available, you may need to make multiple
            requests to retrieve the complete dataset. It's particularly useful
            when dealing with large result sets.
          schema:
            type: string
        - name: offset
          in: query
          description: >-
            Use this query parameter in conjunction with the `limit` parameter
            for pagination. It specifies the starting point or offset within the
            dataset from which results should be returned. By setting the
            offset, you can navigate to different segments of the result set.
            For example, if you set `offset=20` and `limit=10`, you will receive
            results 21 to 30. It is often used to retrieve subsequent pages of
            results.
          schema:
            type: string
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
  /loans/{loan_id}/debt:
    get:
      summary: Get Loan Debt
      description: ''
      operationId: get-loan-debt
      parameters:
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          required: true
          schema:
            type: string
        - name: loan_id
          in: path
          description: >-
            The loan_id field is the unique identifier of the loan for which the
            payment is being made. It is required to provide a valid UUID to
            link the payment to a specific loan.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                        "external_id": "string",
                        "reference": "string",
                        "maximum_payment_date": "2024-02-28",
                        "customer_id": "160c0c4b-9966-4dc1-a916-8407eb10d74e",
                        "customer_external_id": "string",
                        "customer_reference": "string",
                        "total_debt_amount": "string",
                        "overdue_amount": "string",
                        "installment_amount": "string",
                        "installment_due_date": "2023-12-28"
                      },
                      "metadata": {
                        "version": "2",
                        "timestamp": "2023-11-27T21:37:54.359694Z"
                      },
                      "errors": []
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      external_id:
                        type: string
                        example: string
                      reference:
                        type: string
                        example: string
                      maximum_payment_date:
                        type: string
                        example: '2024-02-28'
                      customer_id:
                        type: string
                        example: 160c0c4b-9966-4dc1-a916-8407eb10d74e
                      customer_external_id:
                        type: string
                        example: string
                      customer_reference:
                        type: string
                        example: string
                      total_debt_amount:
                        type: string
                        example: string
                      overdue_amount:
                        type: string
                        example: string
                      installment_amount:
                        type: string
                        example: string
                      installment_due_date:
                        type: string
                        example: '2023-12-28'
                  metadata:
                    type: object
                    properties:
                      version:
                        type: string
                        example: '2'
                      timestamp:
                        type: string
                        example: '2023-11-27T21:37:54.359694Z'
                  errors:
                    type: array
        4XX:
          description: 4XX
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
x-readme-fauxas: true