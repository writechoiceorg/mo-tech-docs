openapi: 3.1.0
info:
  title: Lending - Pre-customers
  version: '2'
servers:
  - url: https://mo-services-zero-production.moprestamo.com/api/v2
components:
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: X-API-KEY
    sec1:
      type: apiKey
      in: header
      name: X-AGGREGATOR-ID
security:
  - sec0: []
    sec1: []
paths:
  /pre-customers:
    post:
      summary: Create Pre Customer
      description: >-
        Use the Create Pre Customer endpoint to create a new record in the
        initial phase of a customer, known as Pre Customer, where minimal
        required information is recorded by the system. Various steps need to be
        taken during this phase to promote or upgrade to a Customer.
      tags:
        - Pre Customers
      operationId: create-pre-customer
      parameters:
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - email
              properties:
                external_id:
                  type: string
                  description: >-
                    The `external_id` field allows you to provide an external
                    identifier or code that can link the newly created Pre
                    Customer to an external system or entity. It can be useful
                    for cross-referencing.
                first_name:
                  type: string
                  description: >-
                    The `first_name` field is required and should contain the
                    first name of the new Pre Customer.
                last_name:
                  type: string
                  description: >-
                    The `last_name` field is required and should contain the
                    last name or surname of the new Pre Customer.
                document_type:
                  type: string
                  description: >-
                    The `document_type` field can specify the type or category
                    of the Pre Customer's document, such as a passport, driver's
                    license, or other forms of identification.
                document_number:
                  type: string
                  description: >-
                    The `document_number` field can store the unique number or
                    identifier associated with the document specified in the
                    `document_type` field.
                phone:
                  type: string
                  description: >-
                    The `phone` field allows you to provide the Pre Customer's
                    contact phone number.
                email:
                  type: string
                  description: >-
                    The `email` field is required and should contain the email
                    address of the "Pre Customer." It is marked as required to
                    ensure each Pre Customer has a valid email address.
                address:
                  type: string
                  description: >-
                    The `address` field can store the Pre Customer's physical
                    address or location information.
                values:
                  type: string
                  description: >-
                    The `values` field allows for the inclusion of additional
                    custom fields or attributes. In your example, you have
                    specified `field_1`, `field_2` and `field_3` which can hold
                    specific values or information relevant to your system or
                    business.
                  format: json
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                      },
                      "metadata": {
                        "version": 0,
                        "timestamp": "2023-10-13T16:10:30.617Z"
                      },
                      "errors": []
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  metadata:
                    type: object
                    properties:
                      version:
                        type: integer
                        example: 0
                        default: 0
                      timestamp:
                        type: string
                        example: '2023-10-13T16:10:30.617Z'
                  errors:
                    type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
    get:
      summary: List Pre Customers
      description: >-
        Use the List Pre Customer endpoint to retrieve a list of all records in
        the Pre Customer phase. It can be useful for tracking or managing these
        records.
      tags:
        - Pre Customers
      operationId: list-pre-customers
      parameters:
        - name: ordering
          in: query
          description: >-
            Use this query parameter to specify the order in which the results
            of a query should be returned. It is commonly used for sorting the
            data in ascending or descending order based on one or more fields.
            You can specify one or more fields by which the data should be
            ordered, along with the order direction (ascending or descending)
            using a comma-separated list. For example,
            `ordering=name,created_at` would  order the results first by the
            `name` field in ascending order and then by the `created_at` field
            in ascending order.
          schema:
            type: string
        - name: limit
          in: query
          description: >-
            Use this query parameter to specify the maximum number of results to
            be returned in a single response. It is used for pagination and can
            help manage the size of the response data. The server will limit the
            number of results to the value specified in the `limit` parameter.
            If there are more results available, you may need to make multiple
            requests to retrieve the complete dataset. It's particularly useful
            when dealing with large result sets.
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: >-
            Use this query parameter in conjunction with the `limit` parameter
            for pagination. It specifies the starting point or offset within the
            dataset from which results should be returned. By setting the
            offset, you can navigate to different segments of the result set.
            For example, if you set `offset=20` and `limit=10`, you will receive
            results 21 to 30. It is often used to retrieve subsequent pages of
            results.
          schema:
            type: integer
            format: int32
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": [\n    {\n      \"id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n      \"reference\": \"string\",\n      \"external_id\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"document_type\": \"string\",\n      \"document_number\": \"string\",\n      \"phone\": \"string\",\n      \"email\": \"user@example.com\",\n      \"status\": \"string\",\n      \"created_at\": \"2019-08-24T14:15:22Z\",\n      \"updated_at\": \"2019-08-24T14:15:22Z\"\n\t\t},\n    {\n      \"id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n      \"reference\": \"string\",\n      \"external_id\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"document_type\": \"string\",\n      \"document_number\": \"string\",\n      \"phone\": \"string\",\n      \"email\": \"user@example.com\",\n      \"status\": \"string\",\n      \"created_at\": \"2019-08-24T14:15:22Z\",\n      \"updated_at\": \"2019-08-24T14:15:22Z\"\n    }\n  ],\n  \"metadata\": {\n    \"timestamp\": \"2023-08-30T16:30:00Z\",\n    \"version\": \"2\",\n    \"page_size\": 5,\n    \"filtered\": 2,\n    \"total_pages\": 1,\n    \"count\": 2\n  },\n  \"errors\": []\n}"
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        reference:
                          type: string
                          example: string
                        external_id:
                          type: string
                          example: string
                        first_name:
                          type: string
                          example: string
                        last_name:
                          type: string
                          example: string
                        document_type:
                          type: string
                          example: string
                        document_number:
                          type: string
                          example: string
                        phone:
                          type: string
                          example: string
                        email:
                          type: string
                          example: user@example.com
                        status:
                          type: string
                          example: string
                        created_at:
                          type: string
                          example: '2019-08-24T14:15:22Z'
                        updated_at:
                          type: string
                          example: '2019-08-24T14:15:22Z'
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-08-30T16:30:00Z'
                      version:
                        type: string
                        example: '2'
                      page_size:
                        type: integer
                        example: 5
                        default: 0
                      filtered:
                        type: integer
                        example: 2
                        default: 0
                      total_pages:
                        type: integer
                        example: 1
                        default: 0
                      count:
                        type: integer
                        example: 2
                        default: 0
                  errors:
                    type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
  /pre-customers/{precustomer_id}:
    get:
      summary: Detail Pre Customer
      description: >-
        Use the Detail Pre Customer endpoint to retrieve the details about a
        customer in the Pre Customer phase. It can be used to obtain in-depth
        information about a particular record.
      tags:
        - Pre Customers
      operationId: detail-pre-customer
      parameters:
        - name: precustomer_id
          in: path
          description: >-
            It is a UUID that uniquely identifies a **Pre Customer** in the
            system. When making a request to retrieve details about a specific
            **Pre Customer**, you should replace {precustomer_id} in the URL
            with the actual UUID of the **Pre Customer** you want to retrieve
            information about.
          schema:
            type: string
          required: true
        - name: x-api-key
          in: header
          description: >-
            Use the `x-api-key` header to include the API key generated
            previously for authentication purposes. The API key serves as a
            secret token that identifies the client or application making the
            request and is used to determine whether the client has the
            necessary permissions to access the requested resource.
          required: true
          schema:
            type: string
        - name: x-aggregator-id
          in: header
          description: >-
            Use the `x-aggregator-id` header to identify the aggregator for a
            particular request. An aggregator is the entity that is involved in
            the processing of transactions or data. By including the id in the
            header, the server can identify which aggregator the request owns
            and handle the request accordingly.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": {\n\t\t\"id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n\t\t\"reference\": \"string\",\n\t\t\"external_id\": \"string\",\n\t\t\"first_name\": \"string\",\n\t\t\"last_name\": \"string\",\n\t\t\"document_type\": \"string\",\n\t\t\"document_number\": \"string\",\n\t\t\"phone\": \"string\",\n\t\t\"email\": \"user@example.com\",\n\t\t\"status\": \"string\",\n\t\t\"created_at\": \"2019-08-24T14:15:22Z\",\n\t\t\"updated_at\": \"2019-08-24T14:15:22Z\"\n\t},\n  \"metadata\": {\n    \"version\": 0,\n    \"timestamp\": \"2023-10-13T16:10:30.617Z\"\n  },\n  \"errors\": []\n}"
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      reference:
                        type: string
                        example: string
                      external_id:
                        type: string
                        example: string
                      first_name:
                        type: string
                        example: string
                      last_name:
                        type: string
                        example: string
                      document_type:
                        type: string
                        example: string
                      document_number:
                        type: string
                        example: string
                      phone:
                        type: string
                        example: string
                      email:
                        type: string
                        example: user@example.com
                      status:
                        type: string
                        example: string
                      created_at:
                        type: string
                        example: '2019-08-24T14:15:22Z'
                      updated_at:
                        type: string
                        example: '2019-08-24T14:15:22Z'
                  metadata:
                    type: object
                    properties:
                      version:
                        type: integer
                        example: 0
                        default: 0
                      timestamp:
                        type: string
                        example: '2023-10-13T16:10:30.617Z'
                  errors:
                    type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\t\"data\": null,\n\t\t\"errors\": [\n\t\t\t\t{\n\t\t\t\t\t\t\"code\": \"XXXXXX\",\n\t\t\t\t\t\t\"description\": \"Description of error\",\n            \"detail\": {\n\t\t\t\t\t\t\t\t\"message\": \"Detail message of error\"\n\t\t\t\t\t\t},\n            \"name\": \"ERROR_NAME\"\n\t\t\t\t}\n\t\t],\n\t\t\"metadata\": {\n\t\t\t\t\"timestamp\": \"2023-11-27T15:04:00.033472Z\", \n\t\t\t\t\"version\": \"2\"\n\t\t}\n}"
              schema:
                type: object
                properties:
                  data: {}
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: XXXXXX
                        description:
                          type: string
                          example: Description of error
                        detail:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Detail message of error
                        name:
                          type: string
                          example: ERROR_NAME
                  metadata:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        example: '2023-11-27T15:04:00.033472Z'
                      version:
                        type: string
                        example: '2'
      deprecated: false
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
x-readme-fauxas: true